#include&lt;GL/glut.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;stdio.h&gt;
float x1,x2,y1,y2;
void display(void)
{
float dy,dx,step,x,y,k,Xin,Yin;
dx=x2-x1;
dy=y2-y1;
if(abs(dx)&gt; abs(dy))
{
step = abs(dx);
}
else
step = abs(dy);
Xin = dx/step;
Yin = dy/step;
x= x1;
y=y1;
glBegin(GL_POINTS);
glVertex2i(x,y);
glEnd();
for (k=1 ;k&lt;=step;k++)
{
x= x + Xin;
y= y + Yin;
glBegin(GL_POINTS);
glVertex2i(x,y);
glEnd();
}

glFlush();
}
void init(void)
{
glClearColor(0.7,0.7,0.7,0.7);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(-100,100,-100,100);
}

int main(int argc, char** argv) {
printf(&quot;Enter the value of x1 : &quot;);
scanf(&quot;%f&quot;,&amp;x1);
printf(&quot;Enter the value of y1 : &quot;);
scanf(&quot;%f&quot;,&amp;y1);
printf(&quot;Enter the value of x2 : &quot;);
scanf(&quot;%f&quot;,&amp;x2);
printf(&quot;Enter the value of y2 : &quot;);
scanf(&quot;%f&quot;,&amp;y2);
glutInit(&amp;argc, argv);
glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize (500, 500);
glutInitWindowPosition (100,100);
glutCreateWindow (&quot;DDA Line Algo&quot;);
init();
glutDisplayFunc(display);
glutMainLoop();
return 0;
}
